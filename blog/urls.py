# blog/urls.py
from django.urls import path
from . import views
urlpatterns = [
    path('', views.BlogListView.as_view(), name='home'),
    path('post/<int:pk>/', views.BlogDetailView.as_view(), name='post_detail'),
]

"""[summary]
    импортируем views 
Мы импортируем views (которые скоро создадим) в верхней части. Пустая строка ''
говорит Python что соответствует всем значениям, далее мы делаем URL именованным 
home, к которому мы можем обратиться в наших views позже. Хотя это не обязательно но
добавление имени к URL это хорошая практика которую необходимо принять так как это 
помогает сохранять организованность когда количество ваших URL растет.
Также мы должны обновить файл urls.py на уровне проекта, чтобы он мог пересылать все 
запросы непосредственно на blog приложение.
"""
"""Все записи в блоге будут
    Все записи в блоге будут начинаться с post/. Далее идет первичный ключ для нашей записи 
post, которая будет представлена в виде целого числа <int: pk>. Вероятно вы спросите что 
это за первичный ключ? Django автоматически добавляет автоматически увеличивающийся 
первичный ключ к нашим моделям баз данных. Таким образом, как только мы объявили 
название поля, author и body в нашей модели Post, Django под капотом также добавил еще 
одно поле под названием id, который является нашим первичным ключом. Мы можем 
получить к нему доступ как id или pk.
Этот pk для нашего первого поста "Привет, Мир" равен 1. Для второго поста это 2. и так 
далее. Поэтому, когда мы переходим на страницу отдельной записи для нашего первого 
сообщения, мы можем ожидать, что его url шаблон будет post/1.
Примечание: понимание того, как первичные ключи работают с DetailView является очень 
распространенной путаницей для начинающих. Стоит перечитать предыдущие два абзаца 
несколько раз, если не понимаете. С практикой это станет второй натурой.
Если теперь запустить сервер с python manage.py runserver и перейти непосредственно к
http://127.0.0.1:8000/post/1/ вы увидите специальную страницу для нашего первого 
поста в блоге
"""